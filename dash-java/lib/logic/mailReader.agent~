% Hand-written attempt at a high-level agent definition that would be used
% and created by the wizard.

Goals:
doMail:mail(From,To,Subject,Text,Url,Type,DoNotRespond,Name)->respondToMessage(mail(From,To,Subject,Text,Url,Type,DoNotRespond,Name))
doMail:email(ID),mailRead(ID,false)->processNextEmail(ID)
doMail:report,doNothing
respondToMessage(mail(From,To,Subject,Text,Url,Type,DoNotRespond,Name)):executeAddEmail(From,To,Subject,Text,Url,Type,DoNotRespond,Name)
processNextEmail(ID):system2Fact(ok(read(ID)))->printMessage('reading ~w ~w from ~w\n', [Type, ID, From]),readEmail(ID), decide(followLink(ID))|mailType(ID,Type), from(ID,From)
readEmail(ID)*:myRetractall(mailRead(ID,_)), myAssert(mailRead(ID,true)), incr(numberRead)
executeAddEmail(From,To,Subject,Text,Url,Type,DoNotRespond,Name)*:<code>

% The rules don't include attention stuff
Rules:
ok(read(ID)):mailType(ID,_):1
ok(followLink(ID)):mailType(ID,ham):1
ok(followLink(ID)):url(ID,_):-0.5

% Base system 1 rules:
BaseRules:mailType(ID,Type)@1,...

