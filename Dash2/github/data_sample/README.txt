Do the following to start simulation with the initial state from empirical data: 

1. To generate user and repos profiles (json object) for initial state instantiation run
python initial_state_loader.py ./data_sample/data_sample.csv
and press 'r'

2. Set up the state file:
{"meta": 
	{ 
	"input_events_log": "data_sample.csv",
	"number_of_users": 2, 
	"number_of_repos": 4,
	"users_file": "./data_sample/data_sample.csv_users.json",
	"repos_file": "./data_sample/data_sample.csv_repos.json",
	"users_ids": "./data_sample/data_sample.csv_users_id_dict.csv",
	"repos_ids": "./data_sample/data_sample.csv_repos_id_dict.csv",
	"is_input_event_log_parse_needed": "True",
	"is_partitioning_needed": "True"
	}
}

"input_events_log" points to input data from which the initial state is created. "input_events_log" is a cumulative event list.
The following files are generated by initial_state_loader
	"users_file": "./data_sample/data_sample.csv_users.json",
	"repos_file": "./data_sample/data_sample.csv_repos.json",
	"users_ids": "./data_sample/data_sample.csv_users_id_dict.csv",
	"repos_ids": "./data_sample/data_sample.csv_repos_id_dict.csv",

If "is_input_event_log_parse_needed" is True, the files above will be generated upon simulation start (takes extra time if input data is big). 
All file paths are relative webdash/Dash2/github directory.

3. Make sure your experiment script uses the right state file. For example, in zk_github_state_experiment.py it is variable 
 state_file = "./data_sample/data_sample_state.json" 

4. run experiment as described in github/README.txt


