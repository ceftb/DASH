import sys; sys.path.extend(['../../'])
import cPickle as pickle


def count_true_positives(sim, gt, pop_threshold = 0):
    number_of_true_positives = 0

    for repo_id in sim.iterkeys():
        if repo_id in gt:
            number_of_true_positives += 1

    return number_of_true_positives


def count_elements(data, pop_threshold = 0):
    number_of_sleceted_elements = 0

    for pop in data.itervalues():
        if pop >= pop_threshold:
            number_of_sleceted_elements += 1

    return number_of_sleceted_elements


if __name__ == "__main__":
    #f_simulation_ev = sys.argv[1]
    f_simulation_pop = sys.argv[1]
    #f_gt_ev = sys.argv[3]
    f_gt_pop = sys.argv[2]

    #simulation_ev = pickle.load(f_simulation_ev)
    simulation_pop = pickle.load(open(f_simulation_pop, "r"))

    #gt_ev = pickle.load(f_gt_ev)
    gt_pop = pickle.load(open(f_gt_pop, "r"))

    tr_positives = count_true_positives(simulation_pop, gt_pop)
    selected_elements = count_elements(simulation_pop, 0)
    relevant_elements = count_elements(gt_pop, 0)
    precision = float(tr_positives) / float(selected_elements)
    recall = float(tr_positives) / float(relevant_elements)

    print "Precision: ", precision
    print "Recall: ", recall





